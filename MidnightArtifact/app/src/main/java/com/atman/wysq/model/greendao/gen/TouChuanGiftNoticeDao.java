package com.atman.wysq.model.greendao.gen;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

import com.atman.wysq.model.bean.TouChuanGiftNotice;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "TOU_CHUAN_GIFT_NOTICE".
*/
public class TouChuanGiftNoticeDao extends AbstractDao<TouChuanGiftNotice, Long> {

    public static final String TABLENAME = "TOU_CHUAN_GIFT_NOTICE";

    /**
     * Properties of entity TouChuanGiftNotice.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property Enter_center = new Property(1, int.class, "enter_center", false, "ENTER_CENTER");
        public final static Property Push_content = new Property(2, String.class, "push_content", false, "PUSH_CONTENT");
        public final static Property Grab_user_id = new Property(3, long.class, "grab_user_id", false, "GRAB_USER_ID");
        public final static Property Grab_user_avatar = new Property(4, String.class, "grab_user_avatar", false, "GRAB_USER_AVATAR");
        public final static Property Target_user_id = new Property(5, long.class, "target_user_id", false, "TARGET_USER_ID");
        public final static Property Center_time = new Property(6, long.class, "center_time", false, "CENTER_TIME");
        public final static Property Center_user_avatar = new Property(7, String.class, "center_user_avatar", false, "CENTER_USER_AVATAR");
        public final static Property GiftContent = new Property(8, String.class, "giftContent", false, "GIFT_CONTENT");
        public final static Property Grab_user_sex = new Property(9, String.class, "grab_user_sex", false, "GRAB_USER_SEX");
        public final static Property GiftIcon = new Property(10, String.class, "giftIcon", false, "GIFT_ICON");
        public final static Property Chat_content = new Property(11, String.class, "chat_content", false, "CHAT_CONTENT");
        public final static Property Type = new Property(12, int.class, "type", false, "TYPE");
        public final static Property Grab_user_signature = new Property(13, String.class, "grab_user_signature", false, "GRAB_USER_SIGNATURE");
        public final static Property Sender_avatar = new Property(14, String.class, "sender_avatar", false, "SENDER_AVATAR");
        public final static Property WYNotice = new Property(15, String.class, "WYNotice", false, "WYNOTICE");
        public final static Property GiftSendName = new Property(16, String.class, "giftSendName", false, "GIFT_SEND_NAME");
        public final static Property Center_user_name = new Property(17, String.class, "center_user_name", false, "CENTER_USER_NAME");
        public final static Property Chat_time = new Property(18, long.class, "chat_time", false, "CHAT_TIME");
        public final static Property Target_user_status = new Property(19, int.class, "target_user_status", false, "TARGET_USER_STATUS");
        public final static Property Notice_content = new Property(20, String.class, "notice_content", false, "NOTICE_CONTENT");
        public final static Property Other_content = new Property(21, String.class, "other_content", false, "OTHER_CONTENT");
        public final static Property Grab_user_verify_status = new Property(22, int.class, "grab_user_verify_status", false, "GRAB_USER_VERIFY_STATUS");
        public final static Property Sender_id = new Property(23, long.class, "sender_id", false, "SENDER_ID");
        public final static Property GiftPrice = new Property(24, int.class, "giftPrice", false, "GIFT_PRICE");
        public final static Property Grab_user_nickName = new Property(25, String.class, "grab_user_nickName", false, "GRAB_USER_NICK_NAME");
        public final static Property Sender_sex = new Property(26, String.class, "sender_sex", false, "SENDER_SEX");
        public final static Property Center_content = new Property(27, String.class, "center_content", false, "CENTER_CONTENT");
        public final static Property Center_user_id = new Property(28, long.class, "center_user_id", false, "CENTER_USER_ID");
        public final static Property Sender_name = new Property(29, String.class, "sender_name", false, "SENDER_NAME");
        public final static Property Notice = new Property(30, String.class, "notice", false, "NOTICE");
        public final static Property Chat_id = new Property(31, String.class, "chat_id", false, "CHAT_ID");
        public final static Property Center_user_sex = new Property(32, String.class, "center_user_sex", false, "CENTER_USER_SEX");
        public final static Property IsRead = new Property(33, int.class, "isRead", false, "IS_READ");
    }


    public TouChuanGiftNoticeDao(DaoConfig config) {
        super(config);
    }
    
    public TouChuanGiftNoticeDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"TOU_CHUAN_GIFT_NOTICE\" (" + //
                "\"_id\" INTEGER PRIMARY KEY AUTOINCREMENT ," + // 0: id
                "\"ENTER_CENTER\" INTEGER NOT NULL ," + // 1: enter_center
                "\"PUSH_CONTENT\" TEXT," + // 2: push_content
                "\"GRAB_USER_ID\" INTEGER NOT NULL ," + // 3: grab_user_id
                "\"GRAB_USER_AVATAR\" TEXT," + // 4: grab_user_avatar
                "\"TARGET_USER_ID\" INTEGER NOT NULL ," + // 5: target_user_id
                "\"CENTER_TIME\" INTEGER NOT NULL ," + // 6: center_time
                "\"CENTER_USER_AVATAR\" TEXT," + // 7: center_user_avatar
                "\"GIFT_CONTENT\" TEXT," + // 8: giftContent
                "\"GRAB_USER_SEX\" TEXT," + // 9: grab_user_sex
                "\"GIFT_ICON\" TEXT," + // 10: giftIcon
                "\"CHAT_CONTENT\" TEXT," + // 11: chat_content
                "\"TYPE\" INTEGER NOT NULL ," + // 12: type
                "\"GRAB_USER_SIGNATURE\" TEXT," + // 13: grab_user_signature
                "\"SENDER_AVATAR\" TEXT," + // 14: sender_avatar
                "\"WYNOTICE\" TEXT," + // 15: WYNotice
                "\"GIFT_SEND_NAME\" TEXT," + // 16: giftSendName
                "\"CENTER_USER_NAME\" TEXT," + // 17: center_user_name
                "\"CHAT_TIME\" INTEGER NOT NULL ," + // 18: chat_time
                "\"TARGET_USER_STATUS\" INTEGER NOT NULL ," + // 19: target_user_status
                "\"NOTICE_CONTENT\" TEXT," + // 20: notice_content
                "\"OTHER_CONTENT\" TEXT," + // 21: other_content
                "\"GRAB_USER_VERIFY_STATUS\" INTEGER NOT NULL ," + // 22: grab_user_verify_status
                "\"SENDER_ID\" INTEGER NOT NULL ," + // 23: sender_id
                "\"GIFT_PRICE\" INTEGER NOT NULL ," + // 24: giftPrice
                "\"GRAB_USER_NICK_NAME\" TEXT," + // 25: grab_user_nickName
                "\"SENDER_SEX\" TEXT," + // 26: sender_sex
                "\"CENTER_CONTENT\" TEXT," + // 27: center_content
                "\"CENTER_USER_ID\" INTEGER NOT NULL ," + // 28: center_user_id
                "\"SENDER_NAME\" TEXT," + // 29: sender_name
                "\"NOTICE\" TEXT," + // 30: notice
                "\"CHAT_ID\" TEXT," + // 31: chat_id
                "\"CENTER_USER_SEX\" TEXT," + // 32: center_user_sex
                "\"IS_READ\" INTEGER NOT NULL );"); // 33: isRead
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"TOU_CHUAN_GIFT_NOTICE\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, TouChuanGiftNotice entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
        stmt.bindLong(2, entity.getEnter_center());
 
        String push_content = entity.getPush_content();
        if (push_content != null) {
            stmt.bindString(3, push_content);
        }
        stmt.bindLong(4, entity.getGrab_user_id());
 
        String grab_user_avatar = entity.getGrab_user_avatar();
        if (grab_user_avatar != null) {
            stmt.bindString(5, grab_user_avatar);
        }
        stmt.bindLong(6, entity.getTarget_user_id());
        stmt.bindLong(7, entity.getCenter_time());
 
        String center_user_avatar = entity.getCenter_user_avatar();
        if (center_user_avatar != null) {
            stmt.bindString(8, center_user_avatar);
        }
 
        String giftContent = entity.getGiftContent();
        if (giftContent != null) {
            stmt.bindString(9, giftContent);
        }
 
        String grab_user_sex = entity.getGrab_user_sex();
        if (grab_user_sex != null) {
            stmt.bindString(10, grab_user_sex);
        }
 
        String giftIcon = entity.getGiftIcon();
        if (giftIcon != null) {
            stmt.bindString(11, giftIcon);
        }
 
        String chat_content = entity.getChat_content();
        if (chat_content != null) {
            stmt.bindString(12, chat_content);
        }
        stmt.bindLong(13, entity.getType());
 
        String grab_user_signature = entity.getGrab_user_signature();
        if (grab_user_signature != null) {
            stmt.bindString(14, grab_user_signature);
        }
 
        String sender_avatar = entity.getSender_avatar();
        if (sender_avatar != null) {
            stmt.bindString(15, sender_avatar);
        }
 
        String WYNotice = entity.getWYNotice();
        if (WYNotice != null) {
            stmt.bindString(16, WYNotice);
        }
 
        String giftSendName = entity.getGiftSendName();
        if (giftSendName != null) {
            stmt.bindString(17, giftSendName);
        }
 
        String center_user_name = entity.getCenter_user_name();
        if (center_user_name != null) {
            stmt.bindString(18, center_user_name);
        }
        stmt.bindLong(19, entity.getChat_time());
        stmt.bindLong(20, entity.getTarget_user_status());
 
        String notice_content = entity.getNotice_content();
        if (notice_content != null) {
            stmt.bindString(21, notice_content);
        }
 
        String other_content = entity.getOther_content();
        if (other_content != null) {
            stmt.bindString(22, other_content);
        }
        stmt.bindLong(23, entity.getGrab_user_verify_status());
        stmt.bindLong(24, entity.getSender_id());
        stmt.bindLong(25, entity.getGiftPrice());
 
        String grab_user_nickName = entity.getGrab_user_nickName();
        if (grab_user_nickName != null) {
            stmt.bindString(26, grab_user_nickName);
        }
 
        String sender_sex = entity.getSender_sex();
        if (sender_sex != null) {
            stmt.bindString(27, sender_sex);
        }
 
        String center_content = entity.getCenter_content();
        if (center_content != null) {
            stmt.bindString(28, center_content);
        }
        stmt.bindLong(29, entity.getCenter_user_id());
 
        String sender_name = entity.getSender_name();
        if (sender_name != null) {
            stmt.bindString(30, sender_name);
        }
 
        String notice = entity.getNotice();
        if (notice != null) {
            stmt.bindString(31, notice);
        }
 
        String chat_id = entity.getChat_id();
        if (chat_id != null) {
            stmt.bindString(32, chat_id);
        }
 
        String center_user_sex = entity.getCenter_user_sex();
        if (center_user_sex != null) {
            stmt.bindString(33, center_user_sex);
        }
        stmt.bindLong(34, entity.getIsRead());
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, TouChuanGiftNotice entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
        stmt.bindLong(2, entity.getEnter_center());
 
        String push_content = entity.getPush_content();
        if (push_content != null) {
            stmt.bindString(3, push_content);
        }
        stmt.bindLong(4, entity.getGrab_user_id());
 
        String grab_user_avatar = entity.getGrab_user_avatar();
        if (grab_user_avatar != null) {
            stmt.bindString(5, grab_user_avatar);
        }
        stmt.bindLong(6, entity.getTarget_user_id());
        stmt.bindLong(7, entity.getCenter_time());
 
        String center_user_avatar = entity.getCenter_user_avatar();
        if (center_user_avatar != null) {
            stmt.bindString(8, center_user_avatar);
        }
 
        String giftContent = entity.getGiftContent();
        if (giftContent != null) {
            stmt.bindString(9, giftContent);
        }
 
        String grab_user_sex = entity.getGrab_user_sex();
        if (grab_user_sex != null) {
            stmt.bindString(10, grab_user_sex);
        }
 
        String giftIcon = entity.getGiftIcon();
        if (giftIcon != null) {
            stmt.bindString(11, giftIcon);
        }
 
        String chat_content = entity.getChat_content();
        if (chat_content != null) {
            stmt.bindString(12, chat_content);
        }
        stmt.bindLong(13, entity.getType());
 
        String grab_user_signature = entity.getGrab_user_signature();
        if (grab_user_signature != null) {
            stmt.bindString(14, grab_user_signature);
        }
 
        String sender_avatar = entity.getSender_avatar();
        if (sender_avatar != null) {
            stmt.bindString(15, sender_avatar);
        }
 
        String WYNotice = entity.getWYNotice();
        if (WYNotice != null) {
            stmt.bindString(16, WYNotice);
        }
 
        String giftSendName = entity.getGiftSendName();
        if (giftSendName != null) {
            stmt.bindString(17, giftSendName);
        }
 
        String center_user_name = entity.getCenter_user_name();
        if (center_user_name != null) {
            stmt.bindString(18, center_user_name);
        }
        stmt.bindLong(19, entity.getChat_time());
        stmt.bindLong(20, entity.getTarget_user_status());
 
        String notice_content = entity.getNotice_content();
        if (notice_content != null) {
            stmt.bindString(21, notice_content);
        }
 
        String other_content = entity.getOther_content();
        if (other_content != null) {
            stmt.bindString(22, other_content);
        }
        stmt.bindLong(23, entity.getGrab_user_verify_status());
        stmt.bindLong(24, entity.getSender_id());
        stmt.bindLong(25, entity.getGiftPrice());
 
        String grab_user_nickName = entity.getGrab_user_nickName();
        if (grab_user_nickName != null) {
            stmt.bindString(26, grab_user_nickName);
        }
 
        String sender_sex = entity.getSender_sex();
        if (sender_sex != null) {
            stmt.bindString(27, sender_sex);
        }
 
        String center_content = entity.getCenter_content();
        if (center_content != null) {
            stmt.bindString(28, center_content);
        }
        stmt.bindLong(29, entity.getCenter_user_id());
 
        String sender_name = entity.getSender_name();
        if (sender_name != null) {
            stmt.bindString(30, sender_name);
        }
 
        String notice = entity.getNotice();
        if (notice != null) {
            stmt.bindString(31, notice);
        }
 
        String chat_id = entity.getChat_id();
        if (chat_id != null) {
            stmt.bindString(32, chat_id);
        }
 
        String center_user_sex = entity.getCenter_user_sex();
        if (center_user_sex != null) {
            stmt.bindString(33, center_user_sex);
        }
        stmt.bindLong(34, entity.getIsRead());
    }

    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    @Override
    public TouChuanGiftNotice readEntity(Cursor cursor, int offset) {
        TouChuanGiftNotice entity = new TouChuanGiftNotice( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.getInt(offset + 1), // enter_center
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // push_content
            cursor.getLong(offset + 3), // grab_user_id
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // grab_user_avatar
            cursor.getLong(offset + 5), // target_user_id
            cursor.getLong(offset + 6), // center_time
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // center_user_avatar
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // giftContent
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // grab_user_sex
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // giftIcon
            cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11), // chat_content
            cursor.getInt(offset + 12), // type
            cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13), // grab_user_signature
            cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14), // sender_avatar
            cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15), // WYNotice
            cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16), // giftSendName
            cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17), // center_user_name
            cursor.getLong(offset + 18), // chat_time
            cursor.getInt(offset + 19), // target_user_status
            cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20), // notice_content
            cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21), // other_content
            cursor.getInt(offset + 22), // grab_user_verify_status
            cursor.getLong(offset + 23), // sender_id
            cursor.getInt(offset + 24), // giftPrice
            cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25), // grab_user_nickName
            cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26), // sender_sex
            cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27), // center_content
            cursor.getLong(offset + 28), // center_user_id
            cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29), // sender_name
            cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30), // notice
            cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31), // chat_id
            cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32), // center_user_sex
            cursor.getInt(offset + 33) // isRead
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, TouChuanGiftNotice entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setEnter_center(cursor.getInt(offset + 1));
        entity.setPush_content(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setGrab_user_id(cursor.getLong(offset + 3));
        entity.setGrab_user_avatar(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setTarget_user_id(cursor.getLong(offset + 5));
        entity.setCenter_time(cursor.getLong(offset + 6));
        entity.setCenter_user_avatar(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setGiftContent(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setGrab_user_sex(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
        entity.setGiftIcon(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setChat_content(cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11));
        entity.setType(cursor.getInt(offset + 12));
        entity.setGrab_user_signature(cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13));
        entity.setSender_avatar(cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14));
        entity.setWYNotice(cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15));
        entity.setGiftSendName(cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16));
        entity.setCenter_user_name(cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17));
        entity.setChat_time(cursor.getLong(offset + 18));
        entity.setTarget_user_status(cursor.getInt(offset + 19));
        entity.setNotice_content(cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20));
        entity.setOther_content(cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21));
        entity.setGrab_user_verify_status(cursor.getInt(offset + 22));
        entity.setSender_id(cursor.getLong(offset + 23));
        entity.setGiftPrice(cursor.getInt(offset + 24));
        entity.setGrab_user_nickName(cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25));
        entity.setSender_sex(cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26));
        entity.setCenter_content(cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27));
        entity.setCenter_user_id(cursor.getLong(offset + 28));
        entity.setSender_name(cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29));
        entity.setNotice(cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30));
        entity.setChat_id(cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31));
        entity.setCenter_user_sex(cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32));
        entity.setIsRead(cursor.getInt(offset + 33));
     }
    
    @Override
    protected final Long updateKeyAfterInsert(TouChuanGiftNotice entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    @Override
    public Long getKey(TouChuanGiftNotice entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    @Override
    public boolean hasKey(TouChuanGiftNotice entity) {
        return entity.getId() != null;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
